{"version":3,"sources":["api/setting.js","api/api.js","context/GifsContext.js","hooks/useGifs.js","components/Gifs.js","components/ListOfGifs.js","components/Spinner.js","api/getTrending.js","components/Category.js","components/TrendingSerches.js","pages/Home.js","img/giffy.png","pages/SearchResults.js","pages/Details.js","App.js","reportWebVitals.js","index.js"],"names":["API_KEY","API_URL","getGifs","a","limit","keyword","page","apiURL","fetch","then","res","json","response","data","map","image","images","title","id","url","downsized_medium","Context","React","createContext","GifsContextProvider","children","useState","gifs","setGifs","Provider","value","useGifs","loading","setLoading","loadingNextPage","setLoadingNextPage","setPage","useContext","GifsContext","keywordToUse","localStorage","getItem","useEffect","gifsResp","setItem","nextGifs","prevGifs","concat","Gif","className","to","alt","src","ListOfGifs","Spinner","name","Category","props","options","Fragment","option","TrendingSerches","trends","setTrends","getTrending","Home","SearchResults","params","onClick","prevPage","Detail","gif","find","singleGif","App","setKeyword","useLocation","pushLocation","giffy","onSubmit","e","preventDefault","onChange","target","type","placeholder","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e797ac66.chunk.js","sourcesContent":["export const API_KEY = \"i9zxWJWDHjbF38g98rEjS3nyY8cDnjf7\";\r\nexport const API_URL = \"https://api.giphy.com/v1/gifs\";\r\n","import {API_KEY, API_URL }from \"./setting\";\r\n\r\nexport default async function getGifs({limit = 10, keyword, page = 0}){\r\n  const apiURL= `${API_URL}/search?api_key=${API_KEY}&q=${keyword}&limit=${limit}&offset=${page * limit}&rating=r&lang=en`\r\n\r\n  return await fetch(apiURL)\r\n  .then(res => res.json())\r\n  .then(response => {\r\n      const {data} = response\r\n      const gifs = data.map(image => {\r\n        const {images, title, id} = image;\r\n        const {url} = images.downsized_medium;\r\n          \r\n        return {images, title, id, url}\r\n      });\r\n    return gifs\r\n  });\r\n};\r\n","import React, {useState} from \"react\";\r\n\r\nconst Context = React.createContext({});\r\n\r\nexport function GifsContextProvider({children}){\r\n    const [gifs, setGifs] = useState([]);\r\n\r\n    return <Context.Provider value={{gifs, setGifs}}>{children}</Context.Provider>\r\n}\r\n\r\nexport default Context;\r\n","import {useState, useEffect, useContext} from \"react\";\r\nimport  getGifs  from \"../api/api.js\";\r\nimport GifsContext from \"../context/GifsContext\";\r\n\r\nconst INITIAL_PAGE = 0;\r\n\r\nexport default function useGifs({keyword} = {keyword: null}){\r\n    const [loading, setLoading] = useState(false);\r\n    const [loadingNextPage, setLoadingNextPage] = useState(false);\r\n    const [page, setPage] = useState(INITIAL_PAGE);\r\n    const {gifs, setGifs} = useContext(GifsContext);\r\n    const keywordToUse = keyword || localStorage.getItem(\"lastkeyword\")\r\n\r\n    useEffect(()=>{\r\n        setLoading(true);\r\n\r\n        getGifs({keyword: keywordToUse})\r\n        .then(gifsResp => {\r\n            setGifs(gifsResp);\r\n            setLoading(false);\r\n            localStorage.setItem(\"lastkeyword\", keyword);\r\n        });\r\n    }, [keyword, keywordToUse, setGifs]);\r\n\r\n    useEffect(()=>{\r\n        if(page === INITIAL_PAGE) return\r\n        setLoadingNextPage(true);\r\n\r\n        getGifs({keyword: keywordToUse, page})\r\n        .then(nextGifs=>{\r\n            setGifs(prevGifs=>{\r\n                return prevGifs.concat(nextGifs);\r\n            });\r\n            setLoadingNextPage(false);\r\n        })\r\n    }, [page, keywordToUse]);\r\n\r\n    return {loading, gifs, loadingNextPage, setPage};\r\n}\r\n","import React from \"react\";\r\nimport \"./Gifs.css\"\r\nimport {Link} from \"wouter\";\r\n\r\nexport default function Gif({title, id, url}){\r\n    return(\r\n        <div className=\"gif\">\r\n            <Link to={`/gif/${id}`} className=\"link-gif\">\r\n                <h4>{title}</h4>\r\n                <img loading=\"lazy\" alt={title} id={id} src={url}/>\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport Gif from \"./Gifs\";\r\n\r\nexport default function ListOfGifs( {gifs} ){\r\n\r\n    return (<div>{gifs.map(({id, title, url}) => <Gif key={id} id={id} title={title} url={url}/>)}</div>);\r\n};\r\n","import React from \"react\";\r\nimport \"./Spinner.css\";\r\n\r\nexport default function Spinner(){\r\n   return <div className=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\r\n};\r\n","import {API_KEY, API_URL} from \"./setting\";\r\n\r\nexport default async function getTrending(){\r\n  const apiURL= `${API_URL}/trending?api_key=${API_KEY}&limit=10&rating=r`\r\n\r\n  return await fetch(apiURL)\r\n  .then(res => res.json())\r\n  .then(response => {\r\n      const {data = []} = response\r\n      const trendsName = data.map(name =>{\r\n          const {title}=name;\r\n          return title;\r\n      })\r\n      return trendsName;\r\n    });\r\n};\r\n","import React from \"react\";\r\nimport {Link} from \"wouter\";\r\n\r\nexport default function Category(props){\r\n    const name = props.name;\r\n    const options = props.options;\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <div className=\"trends-container\">\r\n                <h4 className=\"title-trends\">{name}</h4>\r\n                {options.map(option => <Link to={`/search/${option}`}>{option}</Link>)}\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n","import React, {useState, useEffect} from \"react\";\r\nimport getTrending from \"../api/getTrending\";\r\nimport Categoty from \"./Category\";\r\n\r\nexport default function TrendingSerches(){\r\n    const [trends, setTrends] = useState([]);\r\n\r\n    useEffect(function(){\r\n        getTrending().then(setTrends);\r\n    }, []);\r\n    return <Categoty name=\"Tendencias\" options={trends}/>\r\n};\r\n","import React from \"react\";\r\nimport useGifs from \"../hooks/useGifs\";\r\nimport ListOfGifs from \"../components/ListOfGifs\";\r\nimport Spinner from \"../components/Spinner.js\";\r\nimport TrendingSerches from \"../components/TrendingSerches\";\r\n\r\nexport default function Home(){\r\n    const {loading, gifs} = useGifs();\r\n    \r\n    return(\r\n        <React.Fragment>\r\n            {loading ? <Spinner/> : [\r\n            <TrendingSerches/>,\r\n            <div className=\"contenedor-links\">\r\n                <h4 className=\"ultima-busqueda\">Ultima Busqueda</h4>, <ListOfGifs gifs={gifs}/>\r\n            </div>]}\r\n        </React.Fragment>\r\n    );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/giffy.6c15b7f8.png\";","import React from \"react\";\r\nimport Spinner from \"../components/Spinner.js\";\r\nimport useGifs from \"../hooks/useGifs\";\r\nimport ListOfGifs from \"../components/ListOfGifs\";\r\n\r\nexport default function SearchResults({ params }){\r\n    const { keyword } = params;\r\n    const { loading, gifs, setPage } = useGifs({keyword});\r\n\r\n    const handleNextPage = ()=>setPage(prevPage => prevPage + 1);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {loading ? <Spinner /> : <ListOfGifs gifs={gifs}/>}\r\n            <button onClick={handleNextPage} className=\"button-more-gifs\">Mas Gifs</button>\r\n        </React.Fragment>\r\n    );\r\n};\r\n","import React, {useContext} from \"react\";\r\nimport GifsContext from \"../context/GifsContext\";\r\nimport Gif from \"../components/Gifs\";\r\n\r\nexport default function Detail({params}){\r\n    const {gifs} = useContext(GifsContext);\r\n    \r\n    const gif = gifs.find(singleGif => singleGif.id === params.id);\r\n\r\n    return <Gif {...gif}/>\r\n};\r\n","import React, {useState}from \"react\";\nimport './App.css';\nimport {Route, Link, useLocation} from \"wouter\";\nimport Home from \"./pages/Home.js\";\nimport giffy from \"./img/giffy.png\";\nimport SearchResults from \"./pages/SearchResults\";\nimport Detail from \"./pages/Details\";\nimport {GifsContextProvider}from \"./context/GifsContext\";\n\nexport default function App() {\n  const [keyword, setKeyword] = useState(\"\");\n  const [path, pushLocation] = useLocation();\n\n  const handleSubmit = (e)=>{ \n    e.preventDefault(); \n    return pushLocation(`/search/${keyword}`), setKeyword(\"\");\n  };\n\n  const handleChange = (e)=>{\n    return setKeyword(e.target.value);\n  };\n\n  return (\n      <div className=\"App\">\n        <Link className=\"link-logo\" to=\"/\"><img className=\"logo-giffy\" alt=\"Giffy logo\" src={giffy} /></Link>\n\n        <form onSubmit={handleSubmit} className=\"contenedor-input\">\n          <input onChange={handleChange} type=\"text\" value={keyword} id=\"input-gif\" placeholder=\"Search a Gif\"/>\n          <button className=\"button-gif\">Search Gif</button>\n        </form>\n\n        <GifsContextProvider>\n          <div className=\"home-container\">\n            <Route path=\"/giffy-react/\" component={Home}/>\n          </div>\n\n          <section className=\"App-content\">\n            <Route path=\"/giffy-react/search/:keyword\" component={SearchResults}/>\n            <Route path=\"/giffy-react/gif/:id\" component={Detail}/>\n          </section>\n        </GifsContextProvider>\n\n      </div>\n  );\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}